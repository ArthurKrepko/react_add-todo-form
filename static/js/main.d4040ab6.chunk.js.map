{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","id","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","todosWithUsers","App","useState","setTodos","newTitle","setNewTitle","selectedUserId","setNewUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","useEffect","method","onSubmit","event","preventDefault","todosArray","newTodo","sort","prev","curr","addNewTodo","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4040ab6.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { FullTodo } from '../../types/FullTodo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: FullTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && (\n          <UserInfo user={user} />\n        )\n      }\n    </article>\n  );\n};\n","import React from 'react';\nimport { FullTodo } from '../../types/FullTodo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: FullTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport { User } from './types/User';\nimport { FullTodo } from './types/FullTodo';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosWithUsers: FullTodo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<FullTodo[]>(todosWithUsers);\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedUserId, setNewUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const getMaxId = (todosArray: FullTodo[]): number => {\n    const copy = [...todosArray].sort((prev, curr) => curr.id - prev.id);\n\n    return copy[0].id + 1;\n  };\n\n  const addNewTodo = (title: string, userId: number) => {\n    const newTodo: FullTodo = {\n      id: getMaxId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(selectedUserId),\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (newTitle && selectedUserId) {\n      addNewTodo(newTitle, selectedUserId);\n      setNewTitle('');\n      setNewUserId(0);\n    }\n  };\n\n  useEffect(() => {\n    setHasTitleError(!newTitle);\n  }, [newTitle]);\n\n  useEffect(() => {\n    setHasUserError(!selectedUserId);\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        name=\"form\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"New title\"\n            value={newTitle}\n            onChange={event => setNewTitle(event.target.value)}\n          />\n          {\n            hasTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={event => setNewUserId(Number(event.target.value))}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {\n            hasUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}